names(upreg.sig.tf1)
sig.tf.vec
sig.tf.vec
sig.tf.vec
sig.tf.vec
sig.tf.vec
?pheatmap
sleuth_live(S288c.so)
models(S288c.ref.so)
S288c.ref.so
head(GxE.test.results)
length(GxE.test.results$target_id)
length(E.test.results$target_id)
length(G.test.results$target_id)
length(GxE.test.results$target_id)
length(G.test.results$target_id)
length(E.test.results$target_id)
length(GxE.test.results$target_id)
annotated.G.test.results
head(S288c.kallisto.df)
length(G.intersect.E)
head(transcript.df)
head(tf.annotation)
head(all.transcripts)
length(filtered.GxE.test.results$target_id)
length(GxE.test.results$target_id)
tf.intrsctn
HMY12.rank.vec
HMY12.rank.vec
HMY127.rank.vec
HMY12.vec
HMY127.vec
HMY127.rank.vec
full.pca.plot
full.pca.plot
full.pca.plot
full.pca.plot
S288c.ref.so
plot_pca
obj=S288c.ref.so
full.pca.plot
full.pca.plot
full.pca.plot
metadata
plot_pca
full.pca.plot
pc_x = 1L
pc_y=2L
obj=S288c.ref.so
pcs
full.pca.plot
full.pca.plot
)
)
pcs
pcs=NULL
pcs
pcs <- data.frame()
pcs
pc_x
pc_x=1L
pc_y=2L
pcs
levels(pcs$Clone)
install.packages(VennDiagram)
install.packages("VennDiagram")
64
test
install.package("svglite")
install.packages("svglite")
S288.so <- S288c.ref.so
HMY12.so <- HMY12.ref.so
HMY127.so <- HMY127.ref.so
HMY362.so <- HMY362.ref.so
test.string='E:G+E'
S288c.so <- S288c.ref.so
S288c.test.results
HMY12.test.results
HMY127.test.results
HMY362.test.results
filtered.test.results
length(filtered.test.results$target_id)
length(S288c.test.results)
length(S288c.test.results$target_id)
E.transcripts
G.transcripts
GxE.transcripts
)
)
)
filtered.G.test.results2
length(filtered.G.test.results2$target_id)
